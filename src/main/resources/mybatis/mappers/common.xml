<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="common">	
	<select id="findAllAttendanceSchedule" parameterType="map" resultType="map">
		<![CDATA[
			select 
				date_format(a.start_date, '%Y-%m-%d') as start,
				date_format(a.end_date, '%Y-%m-%d') as end,
				a.status as title,
				a.remark,
				b.name as name,
				b.role as role
			from attendance_schedule a
			left join employee b on a.employee_no = b.no
			where a.hospital_no = #{hospital}
			and start_date between #{sdate} and #{edate}
		]]>
	</select>
	
	<select id="findAllAttendanceScheduleByNo" parameterType="map"  resultType="attendanceschedulevo">
		<![CDATA[
			select 
				a.no,
				date_format(a.start_date, '%Y-%m-%d') as startDate,
				date_format(a.end_date, '%Y-%m-%d') as endDate,
				b.name as employeeName,
				a.remark,
				a.is_confirmed as isConfirmed,
				a.status     
			from attendance_schedule a
			left join employee b on a.employee_no = b.no
			where a.hospital_no = #{no}
			and date_format(a.start_date, '%Y-%m-%d') >= #{sdate}
			or date_format(a.end_date, '%Y-%m-%d') >= #{sdate}
			order by a.is_confirmed asc, a.start_date;
		]]>
	</select>
	
	
	<insert id="insertAttendanceSchedule" parameterType="attendanceschedulevo">
		<![CDATA[
			insert into attendance_schedule
			(start_date, end_date, status, remark, is_confirmed, hospital_no, employee_no) 
			values 
			(#{startDate}, #{endDate}, #{status}, #{remark}, #{isConfirmed}, #{hospitalNo}, #{employeeNo});
		]]>
		<selectKey keyProperty="no" resultType="long" order="AFTER">
			<![CDATA[
				select last_insert_id();
			]]>
		</selectKey>
	</insert>
	
	<update id="updateAttendanceSchedule" parameterType="map">
		<![CDATA[
			update attendance_schedule 
			set is_confirmed = 1
			where no = #{no}
		]]>
	</update>	
	<delete id="deleteHospitalAdmin" parameterType="long">
		<![CDATA[
			delete from attendance_schedule where no = #{no};
		]]>
	</delete>
	
	<!-- 진료 내역 start -->
	<select id="findPatientByDoctor" parameterType="map" resultType="map">
		<choose>
			<when test='role == "ROLE_DOCTOR"'>
				<![CDATA[
					select 
						a.no as appointmentNo,
						date_format(a.date, '%h:%i:%s') as appointmentDate, 
						a.remarks as appointmentRemark,
						a.status,
						b.no as patientNo, 
						b.name as patientName, 
						a.employee_no as employeeNo,
						c.name as employeeName
					from appointment a 
						left join patient b on a.patient_no = b.no
						left join employee c on a.employee_no = c.no
					where a.hospital_no = #{hospital} 
						and a.status between 2 and 3
						and c.role = #{role}
						and a.employee_no = #{no}
						and date_format(a.date, '%Y-%m-%d' ) = date_format(now(), '%Y-%m-%d')
					order by a.status desc, a.date asc
					limit #{page}, 10
				]]>
			</when>
			<otherwise>
				<![CDATA[
					select 
						a.no as appointmentNo,	
						date_format(a.date, '%h:%i:%s') as appointmentDate, 
						a.remarks as appointmentRemark,
						a.status, 
						b.no as patientNo, 
						b.name as patientName, 
						a.employee_no as employeeNo,
						c.name as employeeName
					from appointment a 
						left join patient b on a.patient_no = b.no
						left join employee c on a.employee_no = c.no
					where a.hospital_no = #{hospital} 
						and a.status between 2 and 3 
						and date_format(a.date, '%Y-%m-%d' ) = date_format(now(), '%Y-%m-%d')
					order by a.status desc, a.date asc
					limit #{page}, 10
				]]>
			</otherwise>
		</choose>		
	</select>
	
	
	<select id="findRecordCount" parameterType="map" resultType="int">
		<choose>
			<when test='role == "ROLE_DOCTOR"'>
				<![CDATA[
					select count(*)
					from appointment a 
						left join employee c on a.employee_no = c.no
					where a.hospital_no = #{hospital} 
						and a.status between 2 and 3
						and a.employee_no = #{no}
						and date_format(a.date, '%Y-%m-%d' ) = date_format(now(), '%Y-%m-%d')
				]]>
			</when>	
			<otherwise>
				<![CDATA[
					select count(*)
					from appointment a 
						left join employee c on a.employee_no = c.no
					where a.hospital_no = #{hospital} 
						and a.status between 2 and 3
						and date_format(a.date, '%Y-%m-%d' ) = date_format(now(), '%Y-%m-%d')
				]]>
			</otherwise>	
		</choose>
	</select>
	
	<select id="findvisitedRecordCount" parameterType="map" resultType="int">
		<![CDATA[
			select count(*) from appointment
			where hospital_no = #{hospital}
			and date_format(date, '%Y-%m-%d' ) = #{date}
		]]>
	</select>
	
	<select id="findRecordDetailCount" parameterType="map" resultType="int">
		<![CDATA[
			select count(*) from appointment a
			left join patient b on a.patient_no = b.no
			where a.hospital_no = #{hospital}
			and b.name = #{name};
		]]>
	</select>
	
	<select id="findPatientDate" parameterType="map" resultType="map">
		<![CDATA[
			select 
				a.no as appointmentNo,
				date_format(a.date, '%Y-%m-%d') as appointmentDate,
				c.name as employeeName,
				b.name as patientName,
				a.patient_no as patientNo,
				a.employee_no as employeeNo,
				a.remarks as diagnosisOpinion
			from appointment a
				left join patient b on a.patient_no = b.no
				left join employee c on a.employee_no = c.no
			where a.hospital_no = #{hospital}
			and date_format(a.date, '%Y-%m-%d') = #{date}
			limit #{page}, 10
		]]>
	</select>
	

	
	<select id="findPatientDetail" parameterType="map" resultType="map">
		<![CDATA[
			select 
				a.no as diagnosisNo,
			    date_format(c.date, '%Y-%m-%d') as appointmentDate,
			    a.opinion as diagnosisOpinion,
			    a.patient_no as patientNo,
			    b.name as patientName,
							(select concat( CASE WHEN substr(rrn, 8, 1) = '1' || substr(rrn, 8, 1) = '2' THEN '19'
											ELSE '20' END, substr(rrn, 1, 2), '-', substr(rrn, 3, 2), '-', substr(rrn, 5, 2) ) as birth
							 From patient 
							 where no = #{no} or name like concat('%', #{name}, '%')) as birth,
				e.disease_name as diseaseName,
			    d.name as employeeName,
			    d.no as employeeNo
			from diagnosis a
			left join patient b on a.patient_no = b.no
			left join appointment c on a.appointment_no = c.no
			left join employee d on c.employee_no = d.no
			left join disease e on a.no = e.diagnosis_no
			where c.hospital_no = #{hospital}
			and a.patient_no = #{no} or b.name like concat('%' , #{name}, '%')
			limit #{page}, 10;		
		]]>
	</select>
	
	<update id="updateRecordList" parameterType="appointmentvo">
		<![CDATA[
			update appointment set status = #{status} where no = #{no}
		]]>
	</update>
	
	<select id="getDoctorList" parameterType="long" resultType="employeevo">
		<![CDATA[
			select no, name from employee where hospital_no = #{no} and role='ROLE_DOCTOR'
		]]>
	</select>
	
	<update id="doctorupdate" parameterType="appointmentvo">
		<![CDATA[
			update appointment set employee_no = #{employeeNo} where no = #{no}
		]]>
	</update>
	
	<!-- 진료 내역 end -->
</mapper>
